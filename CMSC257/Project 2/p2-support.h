#define MAILBOX_SIZE 2000
#define ADRESS_SIZE 50
#define SUBJECT_SIZE 200
#define BODY_SIZE 2000
#define NAME_SIZE 20
#define user_email "welka@vcu.edu"
#include <stdlib.h>
////////////////////////////////////////////////////////////////////////////////////////
//File		: p2-support.h
//Description	: header file for p2-support.c
//
//Author	: Alex Welk
//Date		: 11/5/21
//////////////////////////////////////////////////////////////////////////////////////

struct Email
{	char sender[ADRESS_SIZE];
	char receiver[ADRESS_SIZE];
	char subject[SUBJECT_SIZE];
	char body[BODY_SIZE];
	int ID;
	
	struct sent_date {
		int day;
		int month;
		int year;
}sent_date;
}Email;

 

struct Mailbox {
	int size;
	struct Email *emails;
}Mailbox;




void initialize (struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: initialize
//Description	: place to initialize the mailbox with emails
//
//Input		: mailbox pointer
//Output	: void

void display_inbox_menu(struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: display_inbox_menu
//Description	: displays the interactive menu for the email mailbox and calls the appropriate function based on user input
//
//Input		: mailbox pointer
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void create_email(char sender[], char receiver[], char subject[], char body[], int month, int day, int year, struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: create_email
//Description	: creates email structs to be stored in a mailbox
//
//Input		: sender string, receiver string, subject string, body string, month int, day int, year int, mailbox pointer
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void show_inbox(struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: show_inbox
//Description	: displays a mailbox that is passed to it
//
//Input		: mailbox pointer
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void show_id_email(struct Mailbox *ib, int keyID);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: show_id_email
//Description	: displays the email that is associated with a user inputted ID
//
//Input		: mailbox pointer, int keyID to be search for
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////
int compareSender(const void *p1, const void *p2);
////////////////////////////////////////////////////////////////////////////////////////////
//Function	: compareSender
//Description	: my comparator function for qsort for sort_by_sender
//
//Input		: 2 void pointers
//Output	: int
///////////////////////////////////////////////////////////////////////////////////////////

void sort_by_sender(struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: sort_by_sender
//Description	: sorts a passed inbox in alphabetical order by sender
//
//Input		: mailbox pointer
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void sort_by_ID(struct Mailbox *ib);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: sort_by_ID
//Description	: sorts a passed mailbox by the email's ID number
//
//Input		: mailbox pointer
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void search_keyword(struct Mailbox *ib, char str[10]);
/////////////////////////////////////////////////////////////////////////////////////////////
//Function	: search_keyword
//Description	: searches the mailbox for a user inputted string and then displays the emails that contain that string 
//
//Input		: mailbox pointer, keyword string
//Output	: void
/////////////////////////////////////////////////////////////////////////////////////////////

void delete(struct Mailbox *ib, int delKey);
////////////////////////////////////////////////////////////////////////////////////////////
//Function	: delete
//Description	: deletes the email at a user prompted ID
//
//Input		: mailbox pointer, ID key to be deleted
//Output	: void
///////////////////////////////////////////////////////////////////////////////////////////

void exitMenu();
///////////////////////////////////////////////////////////////////////////////////////////
//Function	: exitMenu
//Description	: exits program and frees allocated memory
//
//Input		: none
//Output	: void
//////////////////////////////////////////////////////////////////////////////////////////
